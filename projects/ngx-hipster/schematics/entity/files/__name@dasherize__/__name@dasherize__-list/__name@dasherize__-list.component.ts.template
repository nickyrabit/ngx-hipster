import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { MatDialog } from '@angular/material/dialog';

import { <%= classify(name) %>Service } from './../<%= dasherize(name) %>.service';
import { <%= classify(name) %>DeleteComponent } from '../<%= dasherize(name) %>-delete/<%= dasherize(name) %>-delete.component';
import { <%= classify(name) %> } from '../<%= dasherize(name) %>';

@Component({
  selector: '<%= prefix %>-<%= dasherize(name) %>-list',
  templateUrl: './<%= dasherize(name) %>-list.component.html',
  styleUrls: ['./<%= dasherize(name) %>-list.component.scss']
})
export class <%= classify(name) %>ListComponent implements OnInit {
  displayedColumns = [<% for (let field of entity.fields) {%>'<%= field.name %>', <% } %>'formActions'];
  routeData$ = this.route.data;
  showLoader = false;

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private dialog: MatDialog,
    private <%= camelize(name) %>Service: <%= classify(name) %>Service
  ) {}

  ngOnInit() {}

  delete(id: number, <%= camelize(name) %>: <%= classify(name) %>) {
    const dialogRef = this.dialog.open(<%= classify(name) %>DeleteComponent, {
      data: <%= camelize(name) %>
    });

    dialogRef.afterClosed().subscribe(result => {
      if (result) {
        this.showLoader = true;
        this.<%= camelize(name) %>Service.delete(id).subscribe({
          next: () => this.router.navigate(['/<%= dasherize(name) %>']),
          error: () => (this.showLoader = false),
          complete: () => (this.showLoader = false)
        });
      }
    });
  }
}
