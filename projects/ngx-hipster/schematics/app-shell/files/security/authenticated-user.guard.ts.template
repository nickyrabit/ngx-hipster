import { Injectable } from '@angular/core';
import {
	CanActivate,
	ActivatedRouteSnapshot,
	RouterStateSnapshot,
	Router,
	CanActivateChild
} from '@angular/router';
import { Observable, of } from 'rxjs';
import { take, map } from 'rxjs/operators';
import { AuthenticationService } from './authentication.service';

@Injectable({
	providedIn: 'root'
})
export class AuthenticatedUserGuard implements CanActivate, CanActivateChild {
	constructor(
		private authenticationService: AuthenticationService,
		private router: Router
	) {}

	canActivate(
		next: ActivatedRouteSnapshot,
		state: RouterStateSnapshot
	): Observable<boolean> {
		return this.authenticationService.user$.pipe(
			take(1),
			map(user => {
				if (user) {
					return true;
				} else {
					if (state.url !== '/login') {
						this.router.navigate(['/login']);
					}
					return false;
				}
			})
		);
	}

	canActivateChild(
		next: ActivatedRouteSnapshot,
		state: RouterStateSnapshot
	): Observable<boolean> {
		return this.canActivate(next, state);
	}
}
