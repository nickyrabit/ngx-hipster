{"version":3,"sources":["./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module-ngfactory-es2015.js","sourcesContent":["<div class=\"container\">\n  <mat-card class=\"card\" tabindex=\"0\" role=\"form\">\n    <mat-card-title class=\"title\">Sign In</mat-card-title>\n    <div class=\"error mat-error\">\n      {{ loginError ? 'Invalid username or password.' : '&nbsp;' }}\n    </div>\n    <form class=\"form\" [formGroup]=\"loginForm\">\n      <mat-form-field>\n        <mat-label>Username</mat-label>\n        <input\n          matInput\n          placeholder=\"Enter your username\"\n          formControlName=\"username\"\n          required\n        />\n        <mat-error *ngIf=\"username.invalid\"\n          >Username must contain a value</mat-error\n        >\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Password</mat-label>\n        <input\n          matInput\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          formControlName=\"password\"\n          required\n        />\n        <mat-error *ngIf=\"password.invalid\"\n          >Password must contain a value</mat-error\n        >\n      </mat-form-field>\n      <mat-card-actions>\n        <button\n          mat-raised-button\n          color=\"accent\"\n          class=\"login-btn\"\n          [disabled]=\"loginForm.invalid\"\n          (click)=\"login()\"\n        >\n          <mat-icon>exit_to_app</mat-icon>\n          <span>Sign In</span>\n        </button>\n      </mat-card-actions>\n    </form>\n  </mat-card>\n</div>\n","import { Component, OnDestroy } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../security/authentication.service';\nimport { User } from '../security/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnDestroy {\n  loginForm: FormGroup;\n  loginError: boolean;\n  private componentDestroyed$ = new Subject();\n\n  constructor(\n    formBuilder: FormBuilder,\n    private authenticationService: AuthenticationService,\n    private router: Router,\n    private snackBar: MatSnackBar\n  ) {\n    this.loginForm = formBuilder.group({\n      username: formBuilder.control('', [Validators.required]),\n      password: formBuilder.control('', [Validators.required])\n    });\n    this.loginError = false;\n  }\n\n  get username(): AbstractControl {\n    return this.loginForm.get('username');\n  }\n\n  get password(): AbstractControl {\n    return this.loginForm.get('password');\n  }\n\n  login() {\n    this.loginError = false;\n    this.authenticationService\n      .login(this.username.value, this.password.value)\n      .pipe(takeUntil(this.componentDestroyed$))\n      .subscribe({\n        next: (user: User) => {\n          this.router.navigate(['/']);\n          this.loginForm.reset();\n          this.snackBar.open(\n            `Welcome ${user.firstName ? user.login : user.firstName}`\n          );\n        },\n        error: (err: any) => {\n          this.loginError = true;\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.componentDestroyed$.next();\n    this.componentDestroyed$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Route, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\nimport { SharedModule } from '../shared/shared.module';\n\nconst loginRoutes: Route[] = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [SharedModule, RouterModule.forChild(loginRoutes)],\n  exports: []\n})\nexport class LoginModule {}\n"],"sourceRoot":"webpack:///"}